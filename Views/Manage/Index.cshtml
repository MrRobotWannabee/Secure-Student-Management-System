file name]: Index.cshtml
[file content begin]
@model IndexViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager
@{
    ViewData["Title"] = "Account Settings";
    Layout = "_ManageLayout";
}

<div class="manage-card">
    <div class="manage-card-header">
        <h1 class="h3 mb-0">Account Overview</h1>
    </div>

    <div class="row g-4">
        <!-- Security Status -->
        <div class="col-md-6">
            <div class="manage-card">
                <h2 class="h5 mb-3"><i class="bi bi-shield-lock me-2"></i>Security</h2>
                <div class="d-flex flex-column gap-2">
                    <div class="security-badge">
                        <i class="bi @(Model.TwoFactor ? "bi-shield-check text-success" : "bi-shield-slash text-danger")"></i>
                        Two-Factor Authentication: @(Model.TwoFactor ? "Enabled" : "Disabled")
                    </div>
                    <div class="security-badge">
                        <i class="bi @(Model.HasPassword ? "bi-lock text-success" : "bi-lock-open text-danger")"></i>
                        Password: @(Model.HasPassword ? "Set" : "Not Set")
                    </div>
                </div>
                <div class="mt-3 d-flex gap-2">
                    <a asp-action="ChangePassword" class="btn btn-primary btn-sm">
                        @(Model.HasPassword ? "Change Password" : "Set Password")
                    </a>
                    <a asp-action="ConfigureTwoFactor" class="btn btn-outline-primary btn-sm">
                        Manage 2FA
                    </a>
                </div>
            </div>
        </div>

        <!-- Connected Accounts -->
        <div class="col-md-6">
            <div class="manage-card">
                <h2 class="h5 mb-3"><i class="bi bi-plug me-2"></i>Connected Logins</h2>
                <div class="d-flex flex-column gap-2">
                    @foreach (var login in Model.ExternalLogins)
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="security-badge">
                                <i class="bi bi-@login.LoginProvider.ToLower()"></i>
                                @login.LoginProvider
                            </span>
                            <form asp-action="RemoveLogin" method="post">
                                <input type="hidden" name="loginProvider" value="@login.LoginProvider" />
                                <input type="hidden" name="providerKey" value="@login.ProviderKey" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </div>
                    }
                </div>
                <div class="mt-3">
                    <a asp-action="ManageLogins" class="btn btn-outline-primary btn-sm w-100">
                        Manage External Logins
                    </a>
                </div>
            </div>
        </div>

        @{
            var currentUser = await _userManager.GetUserAsync(User);
            if (currentUser == null)
            {
                <div class="alert alert-danger">User not found. Please try logging in again.</div>
                return; // Stop execution
            }

            var phoneNumber = await _userManager.GetPhoneNumberAsync(currentUser);
        }

        <!-- Phone Number Section -->
        <div class="col-12">
            <div class="manage-card">
                <h2 class="h5 mb-3"><i class="bi bi-phone me-2"></i>Phone Number</h2>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        @if (!string.IsNullOrEmpty(phoneNumber))
                        {
                            <span class="security-badge">
                                <i class="bi bi-check-circle text-success"></i>
                                Verified: @phoneNumber
                            </span>
                        }
                        else
                        {
                            <span class="security-badge">
                                <i class="bi bi-x-circle text-danger"></i>
                                No phone number added
                            </span>
                        }
                    </div>
                    <div class="d-flex gap-2">
                        @if (!string.IsNullOrEmpty(phoneNumber))
                        {
                            <a asp-action="VerifyPhoneNumber" class="btn btn-outline-primary btn-sm">
                                Verify
                            </a>
                            <a asp-action="RemovePhoneNumber" class="btn btn-danger btn-sm">
                                Remove
                            </a>
                        }
                        else
                        {
                            <a asp-action="AddPhoneNumber" class="btn btn-primary btn-sm">
                                Add Number
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div> <!-- Close .row.g-4 -->
</div> <!-- Close .manage-card -->
[file content end]